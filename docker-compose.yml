services:
  web:
    image: odoo:18
    container_name: odoo18
    depends_on:
      - db
    ports:
      # - "1400:8069"  # COMENTADO - Todo va por nginx ahora
      - "8072:8072"  # Puerto para WebSocket/longpolling
    volumes:
      - hexagonos-services-odoo-web-data:/var/lib/odoo
      - ./config:/etc/odoo
      - ./addons:/mnt/extra-addons
      - ./logs:/var/log/odoo
    environment:
      - HOST=${ODOO_DB_HOST}
      - USER=${ODOO_DB_USER}
      - PASSWORD=${ODOO_DB_PASSWORD}
      - ODOO_MASTER_PASSWD=${ODOO_ADMIN_PASSWD}
    command: odoo --config=/etc/odoo/odoo.conf
    deploy:
      resources:
        limits:
          memory: 3G
        reservations:
          memory: 1G
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    restart: unless-stopped
    networks:
      - odoo-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8069/web/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: postgres:15
    container_name: postgres_odoo18
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - hexagonos-services-odoo-db-data:/var/lib/postgresql/data/pgdata
      - ./backups:/backups
    restart: unless-stopped
    networks:
      - odoo-network
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U odoo"]
      interval: 30s
      timeout: 10s
      retries: 3

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin_odoo18
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"
    volumes:
      - hexagonos-services-pgadmin-data:/var/lib/pgadmin
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - odoo-network

  nginx:
    image: nginx:alpine
    container_name: nginx_odoo18
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - web
    restart: unless-stopped
    networks:
      - odoo-network

volumes:
  hexagonos-services-odoo-web-data:
  hexagonos-services-odoo-db-data:
  hexagonos-services-pgadmin-data:

networks:
  odoo-network:
    driver: bridge
